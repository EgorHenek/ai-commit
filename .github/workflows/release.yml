name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install cocogitto
        uses: actions-rs/install@v0.1
        with:
          crate: cocogitto
          version: latest
      - name: Generate changelog
        run: cog changelog --at ${{ github.ref_name }} -t full_hash > CHANGELOG.md
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            --notes-file CHANGELOG.md \
            --repo EgorHenek/ai-commit
  publish-linux:
    name: Publish binary for Linux ${{ matrix.target }}
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
        include:
          - target: aarch64-unknown-linux-gnu
            command: cross
          - target: x86_64-unknown-linux-gnu
            command: cargo
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Install Cross
        if: matrix.command == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross
      - name: Build
        run: ${{ matrix.command }} build --release --locked --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../ai-commit-${{ matrix.target }}.tar.gz ai-commit
          cd -
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} ai-commit-${{ matrix.target }}.tar.gz --repo EgorHenek/ai-commit
  publish-windows:
    name: Publish binary for Windows ${{ matrix.target }}
    needs: create-release
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../ai-commit-${{ matrix.target }}.zip ai-commit.exe
          cd -
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} ai-commit-${{ matrix.target }}.zip --repo EgorHenek/ai-commit
  publish-macos:
    name: Publish binary for macOS ${{ matrix.target }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --release --locked
      - name: Package
        shell: bash
        run: |
          cd target/release
          tar czvf ../../ai-commit-${{ matrix.target }}.tar.gz ai-commit
          cd -
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} ai-commit-${{ matrix.target }}.tar.gz --repo EgorHenek/ai-commit
